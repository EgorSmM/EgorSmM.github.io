<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>образование | Academic</title>
    <link>https://example.com/ru/category/%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</link>
      <atom:link href="https://example.com/ru/category/%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/index.xml" rel="self" type="application/rss+xml" />
    <description>образование</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><lastBuildDate>Sat, 21 May 2022 16:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>образование</title>
      <link>https://example.com/ru/category/%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</link>
    </image>
    
    <item>
      <title>Языки научного программирования.</title>
      <link>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/</link>
      <pubDate>Sat, 21 May 2022 16:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/</guid>
      <description>&lt;p&gt;В широком смысле научный язык программирования - это язык программирования, который широко используется в вычислительной науке и вычислительной математике .
В этом смысле C / C ++ и Python можно рассматривать как языки научного программирования.&lt;/p&gt;
&lt;p&gt;В более широком смысле научный язык программирования - это язык, который разработан и оптимизирован для использования математических формул и матриц.
Такие языки характеризуются не только наличием библиотек, выполняющих математические или научные функции, но и синтаксисом самого языка.
Например, ни C ++, ни Python не имеют встроенных типов матриц или функций для матричной арифметики (сложение, умножение и т. Д.); вместо этого эта функция доступна через стандартные библиотеки.
Языки научного программирования в более строгом смысле включают ALGOL, APL, Fortran, J, Julia, Maple, MATLAB и R.&lt;/p&gt;
&lt;p&gt;В своей работе я использую C++ и Python. С++ приходится использовать, потому что мои алгоритмы работают из деревьями из тысяч вершин, и соответственно им необходимо большое количество времени.
А когда надо сделать рисунок или построить график, то я использую питон из-за удобства. Также на общей и компьютерной алгебрах мы познакомились с Maxima и sage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Работа с библиографией.</title>
      <link>https://example.com/ru/post/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%B5%D0%B8/</link>
      <pubDate>Mon, 16 May 2022 16:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B1%D0%B8%D0%B1%D0%BB%D0%B8%D0%BE%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%B5%D0%B8/</guid>
      <description>&lt;p&gt;Список литературы является обязательной составной частью курсовой, дипломной или другой научной работы и показывает умение слушателя применять на практике знания,
полученные при изучении соответствующих учебных дисциплин, отражает самостоятельную творческую работу, проделанную автором по сбору и анализу материала,
документально подтверждает и обосновывает достоверность и точность приводимых в тексте работы фактов, статистических данных, цитат и других сведений,
заимствованных из различных источников. Грамотно составленный список и приведенные библиографические ссылки и сноски в определенной мере есть также выражение научной
этики и культуры научного труда. Поэтому вопросам составления и оформления библиографического списка и приведения библиографических ссылок в научной работе следует
уделять самое серьезное внимание. Составление списка – длительный процесс, начинающийся одновременно с выбором темы работы. Необходимо вести библиографическую
картотеку, выписывая из каталогов, картотек, библиографических пособий, списков выходные данные всех изданий, которые могут иметь отношение к теме исследования.
При ознакомлении с каждым источником библиографические данные проверяются и уточняются. Цитаты, фактические, статистические и иные сведения выписываются с точным
указанием страницы, на которой они были опубликованы.&lt;/p&gt;
&lt;p&gt;Общая схема библиографического описания отдельно изданного документа включает следующие обязательные элементы:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Заголовок (фамилия, имя, отчество автора или первого из авторов, если их два, три и более)&lt;/li&gt;
&lt;li&gt;Заглавие (название книги, указанное на титульном листе)&lt;/li&gt;
&lt;li&gt;Сведения, относящиеся к заглавию (раскрывают тематику, вид, жанр, назначение документа и т. д.)&lt;/li&gt;
&lt;li&gt;Сведения об ответственности (содержат информацию об авторах, составителях, редакторах, переводчиках и т. п.; об организациях, от имени которых опубликован документ)&lt;/li&gt;
&lt;li&gt;Сведения об издании (повторности, переработка, дополнения)&lt;/li&gt;
&lt;li&gt;Место издания (название города, где издан документ)&lt;/li&gt;
&lt;li&gt;Издательство или издающая организация&lt;/li&gt;
&lt;li&gt;Год издания&lt;/li&gt;
&lt;li&gt;Объем (сведения о количестве страниц, листов)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Источником сведений для библиографического описания является титульный лист или иные части документа, заменяющие его.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Языки разметки.</title>
      <link>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8/</link>
      <pubDate>Fri, 13 May 2022 16:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8/</guid>
      <description>&lt;p&gt;Язык разметки (текста) в компьютерной терминологии - набор символов или последовательностей, вставляемых в текст для передачи информации о его выводе или строении. Принадлежит классу компьютерных языков.
Текстовый документ, написанный с использованием языка разметки, содержит не только сам текст (как последовательность слов и знаков препинания), но и дополнительную информацию о различных его участках - например, указание на заголовки,
выделения, списки и т. д. В более сложных случаях язык разметки позволяет вставлять в документ интерактивные элементы и содержание других документов.&lt;/p&gt;
&lt;p&gt;Следует отметить, что язык разметки неполон по Тьюрингу и обычно не считается языком программирования, хотя, строго говоря, он им является.&lt;/p&gt;
&lt;p&gt;HTML (от англ. HyperText Markup Language &amp;ndash; «язык разметки гипертекста») - разработан британским учёным Тимом Бернерсом-Ли приблизительно в 1986&amp;ndash;1991 годах в стенах Европейского Центра ядерных исследований в Женеве (Швейцария).
HTML создавался как язык для обмена научной и технической документацией, пригодный для использования людьми, не являющимися специалистами в области вёрстки.
HTML успешно справлялся с проблемой сложности SGML путём определения небольшого набора структурных и семантических элементов - дескрипторов. Дескрипторы также часто называют «тегами».
С помощью HTML можно легко создать относительно простой, но красиво оформленный документ. Помимо упрощения структуры документа, в HTML внесена поддержка гипертекста. Мультимедийные возможности были добавлены позже.&lt;/p&gt;
&lt;p&gt;Изначально язык HTML был задуман и создан как средство структурирования и форматирования документов без их привязки к средствам воспроизведения (отображения).
В идеале, текст с разметкой HTML должен был без стилистических и структурных искажений воспроизводиться на оборудовании с различной технической оснащённостью
(цветной экран современного компьютера, монохромный экран органайзера, ограниченный по размерам экран мобильного телефона или устройства и программы голосового воспроизведения текстов).
Однако современное применение HTML очень далеко от его изначальной задачи. Например, тег &lt;TABLE&gt;, несколько раз использованный для форматирования страницы, предназначен для создания в документах самых обычных таблиц.
С течением времени основная идея платформ независимости языка HTML была принесена в жертву современным потребностям в мультимедийном и графическом оформлении.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://example.com/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git/</link>
      <pubDate>Mon, 02 May 2022 14:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;VCS – это системы контроля версий. Они используются при работе в
команде. Обычно основное дерево проекта хранится в локальном или
удалённом репозитории, к которому настроен доступ для участников
проекта. При внесении изменений в содержание проекта система
контроля версий позволяет их фиксировать, совмещать изменения,
произведённые разными участниками проекта, производить откат к
любой более ранней версии проекта, если это требуется.&lt;/li&gt;
&lt;li&gt;Хранилище – место, в котором хранятся все версии проекта. Для
уменьшения объема используемой памяти можно хранить только
изменения проекта.
Commit – добавленные и измененные файлы по сравнению с
предшествующей версией проекта.
История – последовательность изменений проекта.
Рабочая копия – копия над которой сейчас идет работа.&lt;/li&gt;
&lt;li&gt;Централизованная система – система, в которой существует центральное
хранилище, которое доступно всем участникам проекта. В
децентрализованной системе у каждого участника есть свой
репозиторий, что позволяет работать, не подключаясь к сети. Пример
централизованной системы: CVS. Децентрализованной: Git.&lt;/li&gt;
&lt;li&gt;При единоличной работе с VCS берешь нужную версию, вносишь правки
и добавляешь коммит.&lt;/li&gt;
&lt;li&gt;При совместной работе в централизованном хранилище, добавляется
работа по устранению конфликтов. Также необходимо сливать версии, и
вообще следить за структурированностью истории. Нельзя забывать
проверять последнюю версию программы, потому что напарник мог ее
изменить.&lt;/li&gt;
&lt;li&gt;Git помогает работать одновременно над одним и тем же проектом
независимо, а потом совмещать достижения разработчиков. Также он
помогает хранить историю версий, что позволяет быстро откатиться в
случае необходимости.&lt;/li&gt;
&lt;li&gt;Основные команды Git:
Создание основного дерева репозитория: git init
Получение обновлений (изменений) текущего дерева из центрального
репозитория: git pull
Отправка всех произведённых изменений локального дерева в
центральный репозиторий: git push
Просмотр списка изменённых файлов в текущей директории: git status
Просмотр текущих изменений: git diff
Добавить все изменённые и/или созданные файлы и/или каталоги: git add
Добавить конкретные изменённые и/или созданные файлы и/или
каталоги: git add имена_файлов
Удалить файл и/или каталог из индекса репозитория (при этом файл
и/или каталог остаётся в локальной директории): git rm имена_файлов
Сохранить все добавленные изменения и все изменённые файлы:
git commit -am &amp;lsquo;Описание коммита&amp;rsquo;
Сохранить добавленные изменения с внесением комментария через
встроенный редактор: git commit
Создание новой ветки, базирующейся на текущей:
checkout -b имя_ветки
Переключение на некоторую ветку: git checkout имя_ветки
(при переключении на ветку, которой ещё нет в локальном репозитории,
она будет создана и связана с удалённой)
Отправка изменений конкретной ветки в центральный репозиторий:
git push origin имя_ветки
Слияние ветки с текущим деревом: git merge &amp;ndash;no-ff имя_ветки
Удаление локальной уже слитой с основным деревом ветки:
git branch -d имя_ветки
Принудительное удаление локальной ветки: git branch -D имя_ветки
Удаление ветки с центрального репозитория: git push origin :имя_ветки&lt;/li&gt;
&lt;li&gt;Пример использования локального репозитория: В Git создать
репозиторий привязанный к имени пользователя и email и работать в нем
не подключаясь к сети.
Пример использования удаленного репозитория: создать репозиторий на
Github, настроить авторизацию через ssh-ключ и pgp-ключ,
авторизоваться и работать с ним через командную строку.&lt;/li&gt;
&lt;li&gt;Ветви необходимы в случае, если есть несколько путей развития
программы, поэтому из одной версии получаются сразу несколько.&lt;/li&gt;
&lt;li&gt;Игнорировать файлы можно с помощью команды gitignore для того,
чтобы не забивать хранилище мусором.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
